name: Model Registration Integration Test

on:
  push:
    branches: [ main, develop, feature/* ]
    paths:
      - 'src/api/routes/mlflow_proxy*.py'
      - 'src/api/main.py'
      - 'src/middleware/auth.py'
      - 'tests/integration/test_model_registration*.py'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'src/api/routes/mlflow_proxy*.py'
      - 'src/api/main.py'
      - 'src/middleware/auth.py'
      - 'tests/integration/test_model_registration*.py'

jobs:
  test-model-registration:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: ['3.10', '3.11']  # Removed 3.9 due to contourpy dependency
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest==7.4.3 pytest-asyncio==0.21.1 pytest-cov pytest-mock
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        if [ -f requirements-api.txt ]; then pip install -r requirements-api.txt; fi
        if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
    
    - name: Run Model Registration Integration Tests
      run: |
        pytest tests/integration/test_model_registration_ci.py \
          -v \
          --tb=short \
          --cov=src/api/routes \
          --cov-report=term-missing \
          --cov-report=xml \
          --cov-fail-under=0
      env:
        MLFLOW_SERVER_URL: http://localhost:5000
        PYTHONPATH: ${{ github.workspace }}
        DB_PASSWORD: ci_test_password
        DB_HOST: localhost
        DB_NAME: ci_test_db
        DB_USER: ci_test_user
    
    - name: Run Auth Header Forwarding Tests
      run: |
        pytest tests/unit/test_mlflow_proxy_fix_verification.py \
          -v \
          --tb=short \
          --cov-fail-under=0
      env:
        PYTHONPATH: ${{ github.workspace }}
        DB_PASSWORD: ci_test_password
        DB_HOST: localhost
        DB_NAME: ci_test_db
        DB_USER: ci_test_user
    
    - name: Upload Coverage Report
      if: matrix.python-version == '3.11'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: integration
        name: model-registration
    
    - name: Check MLflow Proxy Routes
      run: |
        python -c "
        import sys
        sys.path.insert(0, '.')
        from src.api.main import app

        # Verify routes are mounted
        routes = [str(route.path) for route in app.routes]

        # Check for both route prefixes
        assert any('/mlflow' in route for route in routes), 'Missing /mlflow routes'
        assert any('/api/mlflow' in route for route in routes), 'Missing /api/mlflow routes'

        print('✅ Route configuration verified')
        print('Routes found:')
        for route in routes:
            if 'mlflow' in route:
                print(f'  - {route}')
        "
      env:
        DB_PASSWORD: ci_test_password
        DB_HOST: localhost
        DB_NAME: ci_test_db
        DB_USER: ci_test_user
    
    - name: Validate Auth Header Configuration
      run: |
        python -c "
        import sys
        sys.path.insert(0, '.')
        
        # Check that auth headers are not in removal list
        with open('src/api/routes/mlflow_proxy_improved.py', 'r') as f:
            content = f.read()
            
        # These should NOT be in headers_to_remove
        assert '\"authorization\"' not in content or 'headers_to_remove' not in content.split('\"authorization\"')[0].split('\\n')[-1], \
            'Authorization header should not be removed'
        
        print('✅ Auth header forwarding configuration verified')
        "
    
    - name: Test Summary
      if: always()
      run: |
        echo "================================================"
        echo "Model Registration Integration Test Summary"
        echo "================================================"
        echo "Python Version: ${{ matrix.python-version }}"
        echo "Test Status: ${{ job.status }}"
        echo ""
        echo "This CI test validates:"
        echo "✓ Authentication headers are forwarded to MLflow"
        echo "✓ Both /mlflow and /api/mlflow routes work"
        echo "✓ Complete model registration flow functions"
        echo "✓ Various auth header formats are supported"
        echo "✓ CI/CD pipeline properly tests critical auth flow"
        echo "================================================"
